generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id            String        @id @default(cuid())
  login         String
  password_hash String
  salt          String
  role          String        @default("user")
  created_at    DateTime      @default(now()) @db.Date
  profile       user_profile?

  cargo_in      cargo_in[]
  vessel_voyage vessel_voyage[]
  cargo_load    cargo_load[]
  cargo_act_in  cargo_act_in[]
}

model user_profile {
  id        String @id @default(cuid())
  phone     String
  email     String
  name      String
  last_name String
  user_id   String @unique
  user      user   @relation(fields: [user_id], references: [id])
}

// Справочник. Вагон. Номер вагона, тип вагона (крытый, полувагон)
model ref_wagon {
  id           BigInt     @id @default(autoincrement())
  wagon_number Int
  wagon_type   String
  add_info     String
  cargo_in     cargo_in[]
}

// Справочник. Статусы приемных актов
model ref_cargo_act_in_status {
  id           BigInt         @id @default(autoincrement())
  status_name  String
  cargo_act_in cargo_act_in[]
}

// Справочник. Груз
model ref_cargo {
  id         BigInt     @id @default(autoincrement())
  cargo_name String
  add_info   String
  cargo_in   cargo_in[]
}

// Справочник. Суда
model ref_vessel {
  id          BigInt @id @default(autoincrement())
  vessel_name String
  add_info    String

  voyages vessel_voyage[]
}

// Справочник. Склад
model ref_warehouse {
  id               BigInt     @id @default(autoincrement())
  warehouse_number Int
  warehouse_type   String
  add_info         String
  cargo_in         cargo_in[] // связь добавлена
}

// Справочник. Поставщик
model ref_shipper {
  id           BigInt @id @default(autoincrement())
  shipper_name String
  add_info     String
  contact      String

  cargo_act_in cargo_act_in[]
  cargo_load   cargo_load[]
}

// Справочник. Грузополучатель
model ref_consignee {
  id             BigInt @id @default(autoincrement())
  consignee_name String
  add_info       String
  contact        String

  cargo_act_in cargo_act_in[]
  cargo_load   cargo_load[]
}

// Приемные акты. Прием груза оформляется приемным актом
model cargo_act_in {
  id            BigInt   @id @default(autoincrement())
  act_in_number Int
  act_in_date   DateTime @db.Date
  status_id     BigInt
  shipper_id    BigInt
  consignee_id  BigInt
  rail_waybill  Int
  user_id       String

  status    ref_cargo_act_in_status @relation(fields: [status_id], references: [id])
  shipper   ref_shipper             @relation(fields: [shipper_id], references: [id])
  consignee ref_consignee           @relation(fields: [consignee_id], references: [id])
  user      user                    @relation(fields: [user_id], references: [id])

  cargo_in   cargo_in[]
  cargo_load cargo_load[]

  @@unique([act_in_number, act_in_date])
}

// Таблица прихода груза
model cargo_in {
  id                  BigInt @id @default(autoincrement())
  cargo_id            BigInt
  cargo_act_in_id     BigInt
  warehouse_id        BigInt
  wagon_id            BigInt
  user_id             String
  weight_brutto_start Int
  weight_brutto_rest  Int

  cargo        ref_cargo     @relation(fields: [cargo_id], references: [id])
  cargo_act_in cargo_act_in  @relation(fields: [cargo_act_in_id], references: [id])
  wagon        ref_wagon     @relation(fields: [wagon_id], references: [id])
  user         user          @relation(fields: [user_id], references: [id])
  warehouse    ref_warehouse @relation(fields: [warehouse_id], references: [id])
}

// Морские рейсы
model vessel_voyage {
  id                       BigInt   @id @default(autoincrement())
  estimated_date_departure DateTime @db.Date
  vessel_id                BigInt
  user_id                  String

  vessel     ref_vessel   @relation(fields: [vessel_id], references: [id])
  user       user         @relation(fields: [user_id], references: [id])
  cargo_load cargo_load[]
}

// Отгрузка груза на суда
model cargo_load {
  id               Int      @id @default(autoincrement())
  load_date        DateTime @db.Date
  vessel_voyage_id BigInt
  cargo_act_in_id  BigInt
  user_id          String
  weight_brutto    Int
  shipper_id       BigInt
  consignee_id     BigInt

  vessel_voyage vessel_voyage @relation(fields: [vessel_voyage_id], references: [id])
  cargo_act_in  cargo_act_in  @relation(fields: [cargo_act_in_id], references: [id])
  user          user          @relation(fields: [user_id], references: [id])

  shipper   ref_shipper   @relation(fields: [shipper_id], references: [id])
  consignee ref_consignee @relation(fields: [consignee_id], references: [id])
}
